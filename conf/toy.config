/*
 * -------------------------------------------------
 *  Nextflow config file for running tests
 * -------------------------------------------------
 * Defines bundled input files and everything required
 * to run a fast and simple test. Use as follows:
 *   nextflow run sheynkman-lab/Long-Read-Proteogenomics -profile test,<docker/singularity>
 */

 // TODO - should above be -profile test or -profile toy?

params {
  config_profile_name = 'Toy profile'
  config_profile_description = 'Minimal test dataset to check pipeline function'
  // Limit resources so that this can run on GitHub Actions
  max_cpus = 2
  max_memory = 6.GB
  max_time = 48.h

  // Input data
  gencode_gtf = 'data/input/gencode.v35.annotation.chr22.gtf'
  
  gencode_transcript_fasta = 'data/input/gencode.v35.pc_transcripts.chr22.fa'
  gencode_translation_fasta = 'data/input/gencode.v35.pc_translations.fa'

  gencode_fasta = 'data/input/GRCh38.primary_assembly.genome.chr22.fa'
  sample_css = 'data/input/jurkat.codethon_toy.ccs.bam'
  primers_fasta = 'data/input/NEB_primers.fasta'

  hexamer = 'data/input/Human_Hexamer.tsv'
  logit_model = 'data/input/Human_logitModel.RData'

  sample_kallisto_tpm = 'data/input/jurkat_gene_kallisto.tsv'
  normalized_ribo_kallisto = 'data/input/kallist_table_rdeplete_jurkat.tsv'

  uniprot_fasta = 'data/input/UniProtSubsetTestDb.fasta'

  // need to delete these - used for testing only
  pb_gene = 'data/input/pb_to_gene.tsv'
  sample_fasta = 'results/isoseq3/toy.collapsed.fasta' 
  sample_gtf = 'results/isoseq3/toy.collapsed.gff' 
  fl_count = 'results/isoseq3/toy.collapsed.abundance.txt'
  sample_classification = 'results/sqanti3/toy_classification.txt'
  gencode_test_fasta = 'data/input/GENCODESubsetTestDb.fasta'
  

  // Main arguments: 
  name = 'toy'
  protein_coding_only = false
  refine_cutoff = 0.0

}
